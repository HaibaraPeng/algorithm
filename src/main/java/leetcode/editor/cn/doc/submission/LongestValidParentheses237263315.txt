    class Solution {
        public int longestValidParentheses(String s) {
            int longestValidLength = 0;
            Deque<Integer> stack = new LinkedList<>();
            stack.push(-1);
            for (int i = 0; i < s.length(); i++) {
                if (s.charAt(i) == '(') {
                    stack.push(i);
                } else {
                    stack.pop();
                    if (stack.isEmpty()) {
                        stack.push(i);
                    } else {
                        longestValidLength = Math.max(longestValidLength, i - stack.peek());
                    }
                }
            }
            return longestValidLength;
        }

    }

//runtime:2 ms
//memory:38.5 MB
